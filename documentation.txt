Project description: In this project, you will create a pipeline for the identification of SNPs using NGS data. You will learn how to work with the NCBI Sequence Read Archive database, perform quality control of sequence data in FASTQ format, build alignments to reference genomes, and find SNPs with the IGV genome browser.

Project Context: Like humans, dogs can be predisposed to various diseases, for example, Degenerative Myelopathy. One of your friends recently learned about this disease and wants to know if their Welsh Corgi dog is at risk. You are tasked with helping to investigate whether there is a variation in the dog's genome associated with this predisposition. The replacement of just one nucleotide in the DNA chain is called single-nucleotide polymorphism (SNP). Such variations affect disease development, pathogen response, and visual and physiological features, moreover, they are the markers of other genetic mutations. In this project, you will create a pipeline for the identification of SNPs, associated with such a fatal disorder for Welsh Corgi.

1. Obtaining Raw Reads:
For the project, the Sequence Read Archive (SRA) item with ID SRX9665373 is analyzed.(https://www.ncbi.nlm.nih.gov/sra/SRX9665373[accn]) It includes low-coverage genomic sequencing data of the Canis lupus familiaris sample (dog sample) with a size of 1.8 G bases. The data was sequenced on Illumina NovaSeq 6000 platform, using the whole genome sequencing strategy. The sequencing was Paired-End. The sample has BioSample ID SAMN16778868 , so in the BioSample database we can find more information. For example, the breed of the dog is Pembroke Welsh corgi. Run accessions, whose names start with "SRR", are used to download SRA data. (Current SRR: SRR13233412)

To download the data, first, you should install the sra-tools toolkit. It can be done with the conda: use command conda install -c bioconda sra-tools. sra-tools can also be installed directly from the sra-tools GitHub page. After installation, start the data download with prefetch, using the sample SRR run. Then use the fastqer-dump tool to split the files, which is essential for paired-end reads to separate the files. Also, add the gzip option to save disk space. So, the fastqer-dump command to use is fastqer-dump. You can try other instruments to download the data from SRA, like fast-dump or parallel-fastq-dump.




# Creating new virtual environment
$ conda create --name woof-snp-proj
$ conda activate woof-snp-proj

# Setting env to bash scripting: 
$ #!/usr/bin/env bash

# Checking current directory: 
$ pwd
$ mkdir /home/ethan/woof-snp-proj

# Installing sra-toolkit to ubuntu: https://github.com/ncbi/sra-tools/wiki/02.-Installing-SRA-Toolkit 

# Installing sra-toolkit 
$ conda install -c bioconda sra-tools

# Using prefetch command to download corgi reads from NCBI SRA
$ prefetch SRR13233412 -O /home/ethan/woof-snp-proj

# Listing files to check if SRA file was downloaded
$ ls ~/woof-snp-proj

# Change directory to current SRA accession
$ cd /home/ethan/woof-snp-proj/SRR13233412

# Extracting FASTQ data from SRA accession using fasterq-dump command
$ fasterq-dump --progress SRR13233412
$ ls 

# Compressing fastq files
$ gzip SRR13233412_1.fastq  SRR13233412_2.fastq
$ ls

2. Data Preparation

# Installing fastqc and Trimmomatic
$ conda install -c bioconda fastqc
$ conda install -c bioconda trimmomatic

# Running fastqc on SRA files
$ fastqc *.fastq.gz
$ ls

Trimmomatic can be run with a single-line command. Perform the processing with the parameter below:
Paired End reads.
Use -phred33 option.
The input files names are SRR13233412_1.fastq.gz and SRR13233412_2.fastq.gz
Use SRR13233412_1.paired.fastq.gz SRR13233412_1.unpaired.fastq.gz SRR13233412_2.paired.fastq.gz SRR13233412_2.unpaired.fastq.gz to set output file names. Here the _1 file is the forward and _2 is the reverse. Note, that for Trimmomatic the order of file names is essential.
As for ILLUMINACLIP parameter, remove Nextera adapters for paired reads, set seed mismatches value 2, palindrome clip threshold 30, and simple clip threshold 10.
Set both LEADING and TRAILING option values to 3.
Scan the read with a 4-base wide sliding window, cutting when the average quality per base drops below 15.
Drop reads below the 30 bases long.

# Running Trimmomatic on SRA files
$ trimmomatic PE -phred33 SRR13233412_1.fastq.gz SRR13233412_2.fastq.gz SRR13233412_1.paired.fastq.gz SRR13233412_1.unpaired.fastq.gz SRR13233412_2.paired.fastq.gz SRR13233412_2.unpaired.fastq.gz ILLUMINACLIP:NexteraPE-PE.fa:2:30:10 LEADING:3 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:30

3. Reference Genome
 
-Download the Canis lupus familiaris reference genome from the Ensembl database. It can be found in "Genomes" section. It's known, that the mutation is located on the 31st chromosome, so download only its DNA genome sequence in FASTA format. For the alignment, the ROS_Cfam_1.0 assembly should be used.
-Install the bowtie2 tool. It can be done as conda package.
-Index reference file with bowtie2.

# Bowtie2 github: https://github.com/BenLangmead/bowtie2
# Downloading the Canis lupus familiaris reference genome, chromosome 31, from Ensembl database
$ wget -c https://ftp.ensembl.org/pub/release-112/fasta/canis_lupus_familiaris/dna/Canis_lupus_familiaris.ROS_Cfam_1.0.dna.primary_assembly.31.fa.gz
$ ls

# Installing bowtie to align to reference genome
$ conda install python=2.7
$ conda install -c bioconda bowtie2

# Indexing reference genome and naming reference dataset "corgi" 
$ gzip -dk Canis_lupus_familiaris.ROS_Cfam_1.0.dna.primary_assembly.31.fa.gz
$ bowtie2-build Canis_lupus_familiaris.ROS_Cfam_1.0.dna.primary_assembly.31.fa.gz corgi

4. Alignment and SNP  Search

Align the processed Pair-End reads to the reference genome with bowtie2. Save aligned data in BAM format, using samtools as a converter. As an input use the files, gained after the Trimmomatic.

# Installing and configuring samtools package
$ conda install -c bioconda bowtie2 samtools
$ conda config --add channels bioconda
$ conda config --add channels conda-forge
$ conda install samtools==1.11

# Aligning pair-end reads to refrence genome and converting SAM file to BAM format.
$ bowtie2 -x corgi -1 SRR13233412_2.paired.fastq.gz -2 SRR13233412_1.paired.fastq.gz > aligned_data.sam
$ samtools view -bS aligned_data.sam > aligned_data.bam
$ rm aligned_data.sam

# Checking alginment statistics
$ samtools flagstat aligned_data.bam


After that, import your data and find the SNP with the IGV web application. A familiar biologist suggested, that the SNP of interest is located in one of the exons of chromosome 31, approximately between the positions 26,658,238 and 26,660,830. The SNP of interest is G to A change.

# Indexing reference genome and alignment data for them to be viewed on IGV web application (https://igv.org/)
$ ls
$ samtools faidx Canis_lupus_familiaris.ROS_Cfam_1.0.dna.primary_assembly.31.fa
$ samtools sort aligned_data.bam -o aligned_sorted_data.bam
$ samtools index aligned_sorted_data.bam
$ ls

# Upload the fasta and index reference files (Canis_lupus_familiaris.ROS_Cfam_1.0.dna.primary_assembly.31.fa,Canis_lupus_familiaris.ROS_Cfam_1.0.dna.primary_assembly.31.fa.fai) to the Genome section of IGV 
# Upload sample BAM and index files (aligned_sorted_data.bam, aligned_sorted_data.bam.bai) in the Track section.

There are some SNPs in the region, but not the G to A SNPs

5. Find the Gene

Great news: we didn't find the investigated SNP associated with Degenerative Myelopathy! Although we didn't find the SNP, in real life we would not be so sure whether its absence is due to low genome coverage. Let's investigate which gene our SNP would affect. As the dog genome has annotations, we can easily find the location of SNP in that gene. Genome annotations are stored in GTF or GFF format. 

Add the .gff file to the IGV web browser and find the gene, where the region you are analyzing is located. In the GFF annotation the protein name may be listed, so you can find the gene name on the Internet.

Write the name of the gene in Gene nomenclature.

# Dowloading gff file from ensemble to discover gene of interest
$ wget -c https://ftp.ensembl.org/pub/release-112/gff3/canis_lupus_familiaris/Canis_lupus_familiaris.ROS_Cfam_1.0.112.primary_assembly.31.gff3.gz
$ gzip -dk Canis_lupus_familiaris.ROS_Cfam_1.0.112.primary_assembly.31.gff3.gz
$ ls

# Upload gff3 file to Track section
# Gene of interest is SOD1-202, gene_id:ENSCAFG00845022725, description:   superoxide dismutase 1 [Source:NCBI gene (formerly Entrezgene);Acc:403559], Location   31:26,654,409-26,782,319
# Literature analysis: https://www.pnas.org/doi/10.1073/pnas.0812297106 